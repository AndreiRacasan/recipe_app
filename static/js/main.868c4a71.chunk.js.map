{"version":3,"sources":["comps/RecipeDetails.js","comps/Recipe.js","comps/Alert.js","App.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","className","text","weight","uuidv4","Recipe","recipe","useState","show","setShow","label","image","url","src","alt","href","target","rel","id","onClick","Alert","alert","App","query","setQuery","recipes","setRecipes","setAlert","getData","a","Axios","get","result","data","more","hits","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAceA,EAXO,SAAC,GACrB,OADyC,EAAlBC,YACJC,KAAI,SAAAC,GACrB,OACE,qBAAmBC,UAAU,kBAA7B,UACE,oBAAIA,UAAU,kBAAd,SAAiCD,EAAWE,OAC5C,qBAAID,UAAU,oBAAd,sBAA4CD,EAAWG,YAFhDC,mBCgBAC,EAnBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACLC,oBAAS,GADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEcH,EAAOA,OAA1CI,EAFqB,EAErBA,MAAOC,EAFc,EAEdA,MAAOC,EAFO,EAEPA,IAAKd,EAFE,EAEFA,YAE3B,OACE,sBAAKG,UAAU,SAAf,UACE,6BAAKS,IACL,qBAAKG,IAAKF,EAAOG,IAAKJ,IACtB,sBAAKT,UAAU,UAAf,UACE,mBAAGc,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAAsBC,GAAG,MAA3D,oBAGA,wBAAQA,GAAG,cAAcC,QAAS,kBAAMV,GAASD,IAAjD,4BAEDA,GAAQ,cAAC,EAAD,CAAeV,YAAaA,QCP5BsB,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,qBAAKpB,UAAU,QAAf,SACE,6BAAKoB,OCgEIC,G,MA9DH,WAAO,IAAD,EACUf,mBAAS,IADnB,mBACTgB,EADS,KACFC,EADE,OAEcjB,mBAAS,IAFvB,mBAETkB,EAFS,KAEAC,EAFA,OAGUnB,mBAAS,IAHnB,mBAGTc,EAHS,KAGFM,EAHE,KAQVf,EAAG,0CAAsCW,EAAtC,mBAHM,WAGN,oBAFO,oCAIVK,EAAO,uCAAG,4BAAAC,EAAA,yDACA,KAAVN,EADU,iCAESO,IAAMC,IAAInB,GAFnB,WAENoB,EAFM,QAGAC,KAAKC,KAHL,yCAIHP,EAAS,0DAJN,OAMZD,EAAWM,EAAOC,KAAKE,MACvBX,EAAS,IACTG,EAAS,IARG,wBAUZA,EAAS,8DAVG,4CAAH,qDAqBb,OACE,sBAAK1B,UAAU,MAAf,UACE,sBAAKA,UAAU,OAAf,UACE,+BAAI,mBAAGA,UAAU,oBAAjB,iBACE,uBAAMA,UAAU,cAAcmC,SATrB,SAAAC,GACfA,EAAEC,iBACFV,KAOM,UACW,KAAVP,GAAgB,cAAC,EAAD,CAAOA,MAAOA,IAC7B,uBACEkB,KAAK,OACLC,YAAY,aACZC,aAAa,MACbC,SAjBK,SAAAL,GAAC,OAAIb,EAASa,EAAErB,OAAO2B,QAkB5BA,MAAOpB,IAET,uBAAOgB,KAAK,SAASI,MAAM,SAASzB,GAAG,cAEzC,qBAAKjB,UAAU,UAAf,SACCwB,IAAY,IACbA,EAAQ1B,KAAI,SAAAO,GAAM,OAAI,cAAC,EAAD,CAAuBA,OAAQA,GAAlBF,uBAIvC,iCACE,4EACiC,mBAAGW,KAAK,mCAAmCC,OAAO,SAASC,IAAI,aAA/D,4BADjC,YACwI,mBAAGF,KAAK,0BAA0BC,OAAO,SAASC,IAAI,aAAtD,oBADxI,cCxDR2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.868c4a71.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst RecipeDetails = ({ ingredients }) => {\r\n  return ingredients.map(ingredient => {\r\n    return (\r\n      <ul key={uuidv4()} className=\"ingredient-list\">\r\n        <li className=\"ingredient-text\">{ingredient.text}</li>\r\n        <li className=\"ingredient-weight\">Weight - {ingredient.weight}</li>\r\n      </ul>\r\n    );\r\n  });\r\n};\r\n\r\nexport default RecipeDetails;","import React, { useState } from \"react\";\r\nimport RecipeDetails from \"./RecipeDetails\";\r\n\r\nconst Recipe = ({ recipe }) => {\r\n  const [show, setShow] = useState(false);\r\n  const { label, image, url, ingredients } = recipe.recipe;\r\n\r\n  return (\r\n    <div className=\"recipe\">\r\n      <h2>{label}</h2>\r\n      <img src={image} alt={label} />\r\n      <div className=\"buttons\">\r\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" id=\"url\">\r\n          Source\r\n        </a>\r\n        <button id=\"ingredients\" onClick={() => setShow(!show)}>Ingredients</button>\r\n      </div>\r\n      {show && <RecipeDetails ingredients={ingredients} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;","import React from \"react\";\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    <div className=\"alert\">\r\n      <h3>{alert}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;","import React, {useState} from 'react';\nimport Axios from 'axios';\nimport { v4 as uuidv4 } from \"uuid\";\nimport Recipe from './comps/Recipe';\nimport Alert from \"./comps/Alert\";\nimport './App.css';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [alert, setAlert] = useState('');\n\n  const APP_ID = '85798d0c';\n  const APP_KEY = '20c3a654dc7382e08d4a4cd8627f36d5';\n\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  const getData = async () => {\n    if (query !== \"\") {\n      const result = await Axios.get(url);\n      if (!result.data.more) {\n        return setAlert(\"No such recipes available. Please try something else.\");\n      }\n      setRecipes(result.data.hits);\n      setQuery('');\n      setAlert('');\n    } else {\n      setAlert(\"No input provided. Please type something in and try again.\");\n    }\n  };\n\n  const onChange = e => setQuery(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getData();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h1><i className=\"fas fa-utensils\"></i> Recipe App</h1>\n          <form className=\"search-form\" onSubmit={onSubmit}>\n          {alert !== \"\" && <Alert alert={alert} />}\n            <input \n              type=\"text\" \n              placeholder=\"Enter Food\" \n              autoComplete=\"off\" \n              onChange={onChange}\n              value={query}\n              />\n            <input type=\"submit\" value=\"Search\" id=\"button\"/>\n          </form>\n          <div className=\"recipes\">\n          {recipes !== [] &&\n          recipes.map(recipe => <Recipe key={uuidv4()} recipe={recipe} />)}\n          </div>\n      </div>\n\n      <footer>\n        <p>\n        Designed & Developed  with ðŸ§¡ by <a href=\"https://github.com/AndreiRacasan\" target=\"_blank\" rel=\"noreferrer\">Andrei Racasan</a>. API by <a href=\"https://www.edamam.com/\" target=\"_blank\" rel=\"noreferrer\">Edamam</a>. \n        </p>\n      </footer>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}